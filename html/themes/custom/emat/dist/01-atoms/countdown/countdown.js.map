{"version":3,"sources":["01-atoms/countdown/countdown.js"],"names":["divisors","second","minute","hour","day","document","onreadystatechange","updateTimers","readyState","setInterval","timerSlots","querySelectorAll","forEach","timer","Math","floor","countDownDate","Date","dataset","countdownDate","now","getTime","distance","days","hours","minutes","seconds","millis","timerText","countdownGranularity","textContent","trim"],"mappings":"aAAA,CAAC,UAAY,CAEX,GAAIA,CAAAA,CAAQ,CAAG,CAAEC,MAAM,CAAE,GAAV,CAAf,CACAD,CAAQ,CAACE,MAAT,CAAoC,EAAlB,CAAAF,CAAQ,CAACC,MAHhB,CAIXD,CAAQ,CAACG,IAAT,CAAkC,EAAlB,CAAAH,CAAQ,CAACE,MAJd,CAKXF,CAAQ,CAACI,GAAT,CAA+B,EAAhB,CAAAJ,CAAQ,CAACG,IALb,CAQXE,QAAQ,CAACC,kBAAT,CAA8B,UAAY,CAGxC,GAFAC,CAAY,EAEZ,CAA4B,aAAxB,GAAAF,QAAQ,CAACG,UAAT,EAAiE,UAAxB,GAAAH,QAAQ,CAACG,UAAtD,CACuBC,WAAW,CAACF,CAAD,CAAe,EAAf,CAEnC,CAdU,CAgBX,GAAIA,CAAAA,CAAY,CAAG,UAAW,CAC5B,GAAIG,CAAAA,CAAU,CAAGL,QAAQ,CAACM,gBAAT,CAA0B,eAA1B,CAAjB,CAEAD,CAAU,CAACE,OAAX,CAAmB,SAAUC,CAAV,CAAiB,OAMvBC,IAAI,CAACC,KANkB,CAE9BC,CAAa,CAAG,GAAIC,CAAAA,IAAJ,CAASJ,CAAK,CAACK,OAAN,CAAcC,aAAvB,CAFc,CAG9BC,CAAG,CAAG,GAAIH,CAAAA,IAAJ,GAAWI,OAAX,EAHwB,CAI9BC,CAAQ,CAAGN,CAAa,CAAGI,CAJG,CAM9BG,CAAI,CAAG,EAAWD,CAAQ,CAAGtB,CAAQ,CAACI,GAA/B,CANuB,CAO9BoB,CAAK,CAAG,EAAYF,CAAQ,CAAGtB,CAAQ,CAACI,GAArB,CAA4BJ,CAAQ,CAACG,IAAhD,CAPsB,CAQ9BsB,CAAO,CAAG,EAAYH,CAAQ,CAAGtB,CAAQ,CAACG,IAArB,CAA6BH,CAAQ,CAACE,MAAjD,CARoB,CAS9BwB,CAAO,CAAG,EAAYJ,CAAQ,CAAGtB,CAAQ,CAACE,MAArB,CAA+BF,CAAQ,CAACC,MAAnD,CAToB,CAU9B0B,CAAM,CAAGL,CAAQ,CAAGtB,CAAQ,CAACC,MAVC,CAY9B2B,CAAS,CAAG,EAZkB,CAalC,OAAQf,CAAK,CAACK,OAAN,CAAcW,oBAAtB,EACE,IAAK,IAAL,CACED,CAAS,CAAGD,CAAM,CAAG,MAAT,CAAkBC,CADhC,CAEA,IAAK,GAAL,CACEA,CAAS,CAAGF,CAAO,CAAG,WAAV,CAAwBE,CADtC,CAEA,IAAK,GAAL,CACEA,CAAS,CAAGH,CAAO,CAAG,WAAV,CAAwBG,CADtC,CAEA,IAAK,GAAL,CACEA,CAAS,CAAGJ,CAAK,CAAG,SAAR,CAAoBI,CADlC,CAEA,IAAK,GAAL,CACEA,CAAS,CAAGL,CAAI,CAAG,QAAP,CAAkBK,CADhC,CATF,CAcAf,CAAK,CAACiB,WAAN,CAAoBF,CAAS,CAACG,IAAV,EACrB,CA5BD,CA6BD,CAEF,CAlDD,G","sourcesContent":["(function () {\n\n  var divisors = { second: 1000 };\n  divisors.minute = divisors.second * 60;\n  divisors.hour = divisors.minute * 60;\n  divisors.day = divisors.hour * 24;\n\n  // Handler when the DOM is fully loaded\n  document.onreadystatechange = function () {\n    updateTimers();\n\n    if (document.readyState === 'interactive' || document.readyState === 'complete') {\n      var countdownTimer = setInterval(updateTimers, 10);\n    }\n  }\n\n  var updateTimers = function() {\n    var timerSlots = document.querySelectorAll('.js-countdown');\n\n    timerSlots.forEach(function (timer) {\n\n      var countDownDate = new Date(timer.dataset.countdownDate);\n      var now = new Date().getTime();\n      var distance = countDownDate - now;\n\n      var days = Math.floor(distance / divisors.day);\n      var hours = Math.floor((distance % divisors.day) / divisors.hour);\n      var minutes = Math.floor((distance % divisors.hour) / divisors.minute);\n      var seconds = Math.floor((distance % divisors.minute) / divisors.second);\n      var millis = distance % divisors.second;\n\n      var timerText = \"\";\n      switch (timer.dataset.countdownGranularity) {\n        case \"ms\":\n          timerText = millis + \" ms \" + timerText;\n        case \"s\":\n          timerText = seconds + \" seconds \" + timerText;\n        case \"m\":\n          timerText = minutes + \" minutes \" + timerText;\n        case \"h\":\n          timerText = hours + \" hours \" + timerText;\n        case \"d\":\n          timerText = days + \" days \" + timerText;\n          break;\n      }\n\n      timer.textContent = timerText.trim();\n    });\n  }\n\n})();\n"],"file":"countdown.js"}